@import "./styles.scss";
@import "./fonts.scss";

$iconFilterGrey: invert(37%) sepia(0%) saturate(270%) hue-rotate(151deg)
  brightness(106%) contrast(84%);

$iconFilterPurple: invert(24%) sepia(40%) saturate(5509%) hue-rotate(238deg)
  brightness(91%) contrast(107%);

$online: #92c83e;
$offline: $disabled;

@mixin flex($j_content: flex-start, $a_item: center) {
  display: flex;
  justify-content: $j_content;
  align-items: $a_item;
}

@mixin inputBox(
  $width: auto,
  $defBorderColor: transparent,
  $hoverBorderColor: $disabled,
  $focWiBorderColor: $secondary,
  $includeBefore: true
) {
  position: relative;
  display: flex;
  align-items: center;
  width: $width;
  padding: 0.125rem 2rem;
  border: 1px solid $defBorderColor;
  border-radius: $circled-border-radius;
  transition: $transition-standard;

  &:hover {
    border: 1px solid $hoverBorderColor;
  }

  &:focus-within {
    border: 1px solid $focWiBorderColor;
  }

  // when input-container is focused, sub-element is styled

  @if $includeBefore {
    &:focus-within img.input-icon {
      filter: none;
    }

    &:focus-within::before {
      filter: none;
    }

    &::before {
      content: "";
      left: 0;
      width: 1.5rem;
      height: 1.5rem;
      background-size: contain;
      background-repeat: no-repeat;
      background-position: left;
      filter: $iconFilterGrey;
    }

    &:focus-within::before,
    input:not(:placeholder-shown) + &::before,
    &:has(input:not(:placeholder-shown))::before {
      filter: none;
    }
  }
}

@mixin input {
  width: 100%;
  padding: 1rem 0;
  padding-left: 3.5rem;
  border: none;
  outline: none;
  background-color: unset;
  font-family: "Nunito", sans-serif;
  font-size: 1.125rem;
  font-weight: 500;

  &::placeholder {
    color: $disabled;
  }

  @media (width <= 425px) {
    padding-left: 1.25rem;
  }
}

@mixin iconBox {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 2.5rem;
  height: 2.5rem;
  flex-shrink: 0;
  border-radius: 50%;
  background-color: transparent;
  cursor: pointer;
  transition: $transition-standard;

  &:hover {
    background-color: $background;
  }
}

@mixin button-base($width: auto) {
  @extend .nunito-18-700;
  width: $width;
  padding: 0.75rem 1.5rem;
  border-radius: $circled-border-radius;
  cursor: pointer;
  text-align: center;
  transition: $transition-standard;
}

@mixin buttonDisabled($width: auto) {
  @include button-base($width);
  background-color: $disabled;
  border: 1px solid transparent;
  color: #fff;
  font-weight: 700;
}

@mixin buttonFull($width: auto) {
  @include button-base($width);
  background-color: $accent;
  border: none;
  color: #fff;

  &:hover {
    background-color: $primary;
  }

  &:active {
    background-color: $accent;
  }

  &:disabled {
    background-color: $disabled;
  }
}

@mixin buttonEmpty($width: auto) {
  @include button-base($width);
  background-color: unset;
  border: 1px solid $accent;
  color: $accent;

  &:hover {
    background-color: $primary;
    border-color: $primary;
    color: #fff;
  }

  &:active {
    background-color: $accent;
    border-color: $accent;
  }

  &:disabled {
    background-color: unset;
    border-color: $disabled;
    color: $disabled;
  }
}

@mixin buttonNoBg($width: auto) {
  @include button-base($width);
  background-color: unset;
  border: 1px solid transparent;
  color: $primary;

  &:hover {
    color: $accent;
    border: 1px solid $primary;
  }

  &:active {
    border: 1px solid $accent;
  }
}

@mixin buttonNoBorder($width: auto) {
  @include button-base($width);
  background-color: transparent;
  border: 1px solid transparent;
  color: $primary;
  font-weight: 500;

  &:hover {
    color: $accent;
    background-color: $background;
    font-weight: 700;
  }

  &:active {
    border: 1px solid $accent;
  }
}

@mixin buttonGoogle($width: auto) {
  @include button-base($width);
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: 1.25rem;
  border: 1px solid transparent;
  background-color: $background;
  color: $accent;
  font-weight: 500;

  &:hover {
    font-weight: 500;
    border-color: $accent;
  }

  &:active {
    font-weight: 700;
  }

  @media (width <= 320px) {
    gap: 0.875rem;
  }
}

@mixin buttonFontWeightOnly {
  @extend .nunito-18-600;
  color: $accent;

  &:hover {
    font-weight: 700;
  }
}

@mixin buttonMandatory($width: auto) {
  @include button-base($width);
  background-color: unset;
  border: 1px solid transparent;
  color: $primary;
  font-weight: 500;

  &:hover {
    color: $accent;
    border: 1px solid #a8bebc;
  }

  &:active {
    border: 1px solid $accent;
  }
}

// ########## CHECKBOXES

@mixin base-checkbox($size: 20px) {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: $size;
  height: $size;
  padding: 0;
  border: none;
  overflow: hidden;
  cursor: pointer;

  &::after {
    content: "";
    display: inline-block;
    width: $size;
    height: $size;
    border: none;
    background-size: contain;
    background-repeat: no-repeat;
  }
}

@mixin square-checkbox($size: 24px) {
  @include base-checkbox($size);

  &::after {
    background-image: url("./assets/icons/start/checkbox-empty.svg");
  }

  &:checked::after {
    background-image: url("./assets/icons/start/checkbox-checked.svg");
  }

  &:hover::after {
    background-image: url("./assets/icons/start/checkbox-empty-hover.svg");
  }

  &:checked:hover::after {
    background-image: url("./assets/icons/start/checkbox-checked-hover.svg");
  }
}

@mixin round-checkbox($size: 20px) {
  @include base-checkbox($size);

  &::after {
    background-image: url("./assets/icons/wsm/round-checkbox.svg");
  }

  &:checked::after {
    background-image: url("./assets/icons/wsm/round-checkbox-checked.svg");
  }

  &:hover::after {
    background-image: url("./assets/icons/wsm/round-checkbox-hover.svg");
  }

  &:checked:hover::after {
    background-image: url("./assets/icons/wsm/round-checkbox-checked.svg");
  }
}

@mixin avatarStatusThumbnail(
  $status: $online,
  $img_size: 3rem,
  $status_size: 0.75rem,
  $border_color: #fff
) {
  position: relative;
  width: $img_size;
  height: $img_size;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
  }

  &::after {
    content: "";
    position: absolute;
    bottom: 0;
    right: 0;
    width: $status_size;
    height: $status_size;
    border-radius: 50%;
    background-color: $status;
    border: 2px solid $border_color;
  }
}

@mixin iconFilter($filter: none) {
  filter: $filter;
}

// ########## FONT-STYLING

@mixin nunito($size: 1, $weight: 700, $color: $text) {
  font-family: Nunito, sans-serif;
  font-size: $size + rem;
  font-weight: $weight;
  color: $color;
}

@mixin fontSizer($size: 18, $weight: 700, $color: $text) {
  $class-name: "nunito-#{$size}-#{$weight}";
  @extend .#{$class-name};
  color: $color;
}

@mixin fontStyleEDIT {
  @extend .nunito-18-600;
  color: $accent;

  &:hover {
    font-weight: 700;
  }
}
